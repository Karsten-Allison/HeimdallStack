// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.data;

#nullable disable

namespace backend.data.Migrations
{
    [DbContext(typeof(WorkInstructionDatabaseContext))]
    partial class WorkInstructionDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("backend.data.Instruction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<string>("InstructionSummary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WorkInstructionSetID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("WorkInstructionSetID");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("backend.data.WorkInstructionSet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("WorkInstructionSets");
                });

            modelBuilder.Entity("backend.data.Instruction", b =>
                {
                    b.HasOne("backend.data.WorkInstructionSet", null)
                        .WithMany("InstructionSet")
                        .HasForeignKey("WorkInstructionSetID");
                });

            modelBuilder.Entity("backend.data.WorkInstructionSet", b =>
                {
                    b.Navigation("InstructionSet");
                });
#pragma warning restore 612, 618
        }
    }
}
